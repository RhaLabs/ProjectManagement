<!--<link rel="stylesheet" href="./Docs/revitui/tabs.css" />-->
<style>
.custom-combobox {
position: relative;
display: inline-block;
}  .custom-combobox-toggle {
position: absolute;
top: 0;
bottom: 0;
margin-left: -1px;
padding: 0;
/* support: IE7 */
*height: 1.7em;
*top: 0.1em;
}
.custom-combobox-input {
margin: 0;
padding: 0.3em;
}
</style>
<script>
(function( $ ) {
  $.widget( "custom.combobox", {
  _create: function() {
    this.wrapper = $( "<span>" )
      .addClass( "custom-combobox" )
      .insertAfter( this.element );
    this.element.hide();
    this._createAutocomplete();
    this._createShowAllButton();
    },
    _createAutocomplete: function() {
      var selected = this.element.children( ":selected" ),
        value = selected.val() ? selected.text() : "";
      this.input = $( "<input>" )
        .appendTo( this.wrapper )
        .val( value )
        .attr( "title", "" )
        .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
        .autocomplete({
          delay: 0,
          minLength: 0,
          source: $.proxy( this, "_source" )
        })
        .tooltip({
          tooltipClass: "ui-state-highlight"
        });
      this._on( this.input, {
        autocompleteselect: function( event, ui ) {
          ui.item.option.selected = true;
          this._trigger( "select", event, {
            item: ui.item.option
          });
        },
        autocompletechange: "_removeIfInvalid"
      });
    },
    _createShowAllButton: function() {
      var input = this.input,
      wasOpen = false;
      $( "<a>" )
        .attr( "tabIndex", -1 )
        .attr( "title", "Show All Items" )
        .tooltip()
        .appendTo( this.wrapper )
        .button({
          icons: {
            primary: "ui-icon-triangle-1-s"
          },
          text: false
        })
        .removeClass( "ui-corner-all" )
        .addClass( "custom-combobox-toggle ui-corner-right" )
        .mousedown(function() {
          wasOpen = input.autocomplete( "widget" ).is( ":visible" );
        })
        .click(function() {
          input.focus();
          // Close if already visible
          if ( wasOpen ) {
            return;
          }
          // Pass empty string as value to search for, displaying all results
          input.autocomplete( "search", "" );
        });
      },
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
          })
        );
      },
      _removeIfInvalid: function( event, ui ) {
        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }
        // Search for a match (case-insensitive)
        var value = this.input.val(),
        valueLowerCase = value.toLowerCase(),
        valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500
      );
      this.input.data( "ui-autocomplete" ).term = "";
    },
    _destroy: function() {
      this.wrapper.remove();
      this.element.show();
    }
  });
})( jQuery );
$(function() {
  $( "#combobox" ).combobox();
  $( "#toggle" ).click(function() {
    $( "#combobox" ).toggle();
  });
});
</script>
<div>
 <div class="ui-widget-content inline">
  <div class="inline">
    <div class="inline"><span class="revit-icon-medium revit-icon-worksets inline" title=""/><p class="stacked">Worksets</p></div>
  </div>
  <div class="inline" style="clear:right">
      <p class="left-align">Active Workset:</p>
      <p class="left-align">
        <div class="ui-widget">
          <label></label>
          <select id="combobox">
            <option value="">Share Levels and Grids</option>
            <option value="Workset1">Workset 1</option>
            <option value="Workset2">Workset 2</option>
          </select>
        </div>
      </p>
      <p class="left-align"><span class="revit-icon revit-icon-worksets inline"/>Gray Inactive Worksets</p>
  </div>
  <p class="center" style="border-top-color: #bababa; border-top-width: 1px; border-top-style: solid;">
    <strong >Worksets</strong>
  </p>
 </div>
 <div class="ui-widget-content inline">
  <div class="inline" >
    <div class="inline"><span class="revit-icon-medium revit-icon-synchronize inline" title=""/><p class="stacked">Synchronize<br>with Central</p></div>
    <div class="inline"><span class="revit-icon-medium revit-icon-reloadlatest inline" title=""/><p class="stacked">Reload<br>Latest</p></div>
    <div class="inline"><span class="revit-icon-medium revit-icon-relinquish inline" title=""/><p class="stacked">Relinquish<br>all Mine</p></div>
    <div class="inline"><span class="revit-icon-medium revit-icon-history inline" title=""/><p class="stacked">Show<br>history</p></div>
    <div class="inline"><span class="revit-icon-medium revit-icon-restore inline" title=""/><p class="stacked">Restore<br>Backup</p></div>
    <div class="inline"><span class="revit-icon-medium revit-icon-requests inline" title=""/><p class="stacked">Editing<br>Requests</p></div>
  </div>
  <p class="center" style="border-top-color: #bababa; border-top-width: 1px; border-top-style: solid;">
    <strong >Synchronize</strong>
  </p>
 </div>
 <div class="ui-widget-content inline">
  <div class="inline" >
    <div class="inline"><span class="revit-icon-medium revit-icon-copymonitor inline" title=""/><p class="stacked">Copy&#47;<br>Monitor</p></div>
    <div class="inline"><span class="revit-icon-medium revit-icon-coordinationreview inline" title=""/><p class="stacked">Coordination<br>Review</p></div>
    <div class="inline"><span class="revit-icon-medium revit-icon-coordinationsettings inline" title=""/><p class="stacked">Coordination<br>Settings</p></div>
    <div class="inline"><span class="revit-icon-medium revit-icon-reconcilehosting inline" title=""/><p class="stacked">Reconcile<br>Hosting</p></div>
    <div class="inline"><span class="revit-icon-medium revit-icon-interference inline" title=""/><p class="stacked">Interference<br>Check</p></div>
  </div>
  <p class="center" style="border-top-color: #bababa; border-top-width: 1px; border-top-style: solid;">
    <strong >Coordinate</strong>
  </p>
 </div>
</div>
<script>
$(document).ready(function(){
  $("p.inline").css({
    "cursor":"pointer"
  });
 });
</script>
