<?php

namespace LimeTrail\Bundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProjectinformationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectinformationRepository extends EntityRepository
{
    public function findProjectAndDates($id, $rundate)
    {
        $q = $this->getEntityManager()->createQuery(
      'SELECT p, d FROM LimeTrailBundle:ProjectInformation p
      JOIN p.dates d
      WHERE p.id = :id
        AND d.runDate = :date'
    )
    ->setParameters(array(
      'id' => $id,
    ))
    ->setParameter('date', $rundate, \Doctrine\DBAL\Types\Type::DATETIME);

        return $q->getSingleResult();
    }

    public function findProjectDatesByDate($id, $rundate)
    {
        $q = $this->getEntityManager()->createQuery(
      'SELECT p, d FROM LimeTrailBundle:ProjectInformation p
      JOIN p.dates d
      WHERE p.id = :id
        AND d.runDate = :date'
    )
    ->setParameters(array(
      'id' => $id,
    ))
    ->setParameter('date', $rundate, \Doctrine\DBAL\Types\Type::DATETIME);

        return $q->getSingleResult();
    }
    
    public function findProjectsByDate($rundate)
    {
       $q = $this->getEntityManager()->createQuery(
        'SELECT si, p FROM LimeTrailBundle:StoreInformation si
         JOIN si.projects p
         JOIN p.dates d
         WHERE 
           d.runDate = :date
           AND d.pwoAct < :date
           AND (
              d.goAct IS NULL
              OR d.goAct > :date
           )'
        )
        ->setParameter('date', $rundate, \Doctrine\DBAL\Types\Type::DATETIME);
        
      return $q->getResult();
    }
    
    public function findChangesByProjectId($projectId)
    {
      $q = $this->getEntityManager()->createQuery(
        'SELECT p, pc, c FROM LimeTrailBundle:ProjectInformation p
          JOIN p.changes pc
          JOIN pc.change c
          WHERE
            p.id = :pid'
      )
      ->setParameter('pid', $projectId);
      
      return $q->getResult();
    }
}
